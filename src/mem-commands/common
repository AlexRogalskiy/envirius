# Returns main command name
get_cmd_name() {
    echo "mem"
}

bold() {
    local bold=`tput bold`
    local normal=`tput sgr0`
    echo -n "${bold}$1${normal}"
}

# Output a usage message
show_usage() {
    bold "Usage"; echo ": $(get_cmd_name) $SUBCOMMAND $1"
}

# Output a description for command
show_desc() {
    bold "Description"; echo ": $1"
}

# Pads the left-side of a string with a specific set of characters
# 
# $ lpad 3 5 0
# 00003
#
# http://techknack.net/bash-rpad-lpad-and-center-pad/
lpad() {
    if [ "$1" ]; then
        local word="$1";
    else
        local word="";
    fi;

    if [ "$2" ]; then
        local len=$2;
    else
        local len=${#word};
    fi;
 
    if [ "$3" ]; then
        local padding="$3";
    else
        local padding=" ";
    fi;

    while [ ${#word} -lt $len ]; do
        word="$padding$word";
    done;
    echo "$word";
}

# Pads the right-side of a string with a specific set of characters
#
# $ rpad "w00t" 15 ^
# w00t^^^^^^^^^^^
#
rpad() {
    if [ "$1" ]; then
        local word="$1";
    else
        local word="";
    fi;

    if [ "$2" ]; then
        local len=$2;
    else
        local len=${#word};
    fi;
 
    if [ "$3" ]; then
        local padding="$3";
    else
        local padding=" ";
    fi;

    while [ ${#word} -lt $len ]; do
        word="$word$padding";
    done;
    echo "$word";
}

# Returns a clear plugin name
#   '--rust'     --> 'rust'
#   '--rust=0.9' --> 'rust'
get_plugin_name() {
    echo $1 | sed 's/\-*//' | sed 's/=[.0-9]*//'
}

# Returns plugin version
#   '--rust=0.9' --> '0.9'
get_plugin_version() {
    echo $1 | sed 's/[-a-zA-Z0-9]*=//'
}

# Returns fullpath for file in the cache
get_cached_file_path() {
    echo $MEM_CACHE_DIR/$1
}

# Downloads url into cache with certain name
download_file() {
    local url="$1"
    local file="$2"

    if [ "$file" = "" ]; then
        file=$(filename $url)
    fi
    local file_in_cache=$(get_cached_file_path $file)

    if [ ! -f $file_in_cache ]; then
        if type curl &>/dev/null; then
            curl -o "$file_in_cache" "$url"
        elif type wget &>/dev/null; then
            wget -P $MEM_CACHE_DIR "$url"
        else
          echo "Please, install 'curl' or 'wget' and try again."
          exit 1
        fi
    fi

    echo "$file_in_cache"
}

# Returns filename only from full path or url
filename() {
    echo "${1##*/}"
}

# Returns number of cpu on the server
get_cpu_count() {
    echo "`grep processor /proc/cpuinfo | wc -l`"
}

# Get current time in seconds
get_time() {
    echo `date +%s`
}

# Returns diff in secons with enter timestamp
get_time_diff() {
    local time_ends=$(date +%s)
    local time_diff=$(( $time_ends - $1 ))
    echo "$time_diff"
}

# Returns full path to the `on` script for the environment
# and plugin in it.
get_activate_script_path() {
    local env_name_full=$1
    local plugin_name=$2
    if [ "$2" = "" ]; then
        echo "$env_name_full/bin/activate"
    else
        echo "$env_name_full/bin/activate-$plugin_name"
    fi
}

# Returns fullpath for the environment directory
# If environment's name is nto enter then returns
# full path to the directory where all environments live
get_env_full_path() {
    if [ "$1" = "" ]; then
        echo $MEM_ENVS_DIR
    else
        local env_name=$1
        echo $MEM_ENVS_DIR/$env_name
    fi
}

get_plugin_full_path() {
    local MEM_ENVS_DIR=$MEM_PATH/mem-plugins
    if [ "$1" = "" ]; then
        echo $MEM_ENVS_DIR
    else
        echo $MEM_ENVS_DIR/$1
    fi
}


# /* vim: set filetype=sh : */
